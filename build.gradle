buildscript {
    dependencies {
        classpath 'org.jetbrains.kotlin:kotlin-noarg:1.3.72'
    }
}

plugins {
    id 'org.springframework.boot' version '2.3.2.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'org.jetbrains.kotlin.jvm' version '1.3.72'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.3.72'
}

apply plugin: 'kotlin-jpa'

group = 'store.wckd'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://dl.bintray.com/konrad-kaminski/maven' }
}

dependencies {
    implementation 'org.springframework.kotlin:spring-kotlin-coroutine:0.3.7'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-reactor:1.3.8'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.8'

    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.72'
    implementation 'org.jetbrains.kotlin:kotlin-reflect:1.3.72'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
//    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'io.springfox:springfox-swagger2:2.9.2'

    implementation 'com.auth0:java-jwt:3.10.3'

    implementation 'com.zaxxer:HikariCP:3.4.5'

    compileOnly 'org.projectlombok:lombok'

    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
    runtimeOnly 'org.postgresql:postgresql'
    developmentOnly 'com.h2database:h2'
    testRuntimeOnly 'com.h2database:h2'

    annotationProcessor 'org.projectlombok:lombok'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.amqp:spring-rabbit-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

compileKotlin {
    kotlinOptions.jvmTarget = '11'
}

compileTestKotlin {
    kotlinOptions.jvmTarget = '11'
}

test {
    useJUnitPlatform()
}
